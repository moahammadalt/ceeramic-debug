import type { StreamRef } from '@ceramicnetwork/streamid';
export declare function streamIDToString(id: StreamRef | string): string;
/** @internal */
export declare function applyMap<M extends Record<string, unknown>, V extends M[keyof M] = M[keyof M], R = unknown>(inputs: M, callFunc: (input: V) => R): Record<keyof M, R>;
/** @internal */
export declare function promiseMap<M extends Record<string, unknown>, V extends M[keyof M] = M[keyof M], R = unknown>(inputs: M, callFunc: (input: V) => Promise<R>): Promise<Record<keyof M, R>>;
